<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lanqiao.educationaladministrationsystem.mapper.EasCourseMapper">

    <resultMap id="BaseResultMap" type="org.lanqiao.educationaladministrationsystem.dto.EasCourse.EasCourseQuery">
        <id column="id"  property="id" />
        <result column="start_date"   property="startDate" />
        <result column="end_date"   property="endDate" />
        <result column="class_hour"  property="classHour" />
        <result column="test_mode"  property="testMode" />
        <result column="student_num"  property="studentNum" />
        <result column="choice_num"  property="choiceNum" />
    </resultMap>

    <resultMap id="ResultMapCourse" type="org.lanqiao.educationaladministrationsystem.pojo.EasCourse">
        <id column="id" property="id"/>
        <result column="start_date"   property="startDate" />
        <result column="end_date"   property="endDate" />
        <result column="class_hour"  property="classHour" />
        <result column="test_mode"  property="testMode" />
        <result column="student_num"  property="studentNum" />
        <result column="choice_num"  property="choiceNum" />
        <result column="t_id" property="tId"/>
        <result column="base_course_id" property="baseCourseId"/>
    </resultMap>


    <sql id="Base_Column_List">
    id, start_date, end_date, class_hour, test_mode, student_num, choice_num, t_id, base_course_id
    </sql>



    <!-- 加入if判断日期!=null 会更新失败-->
    <update id="updateCourseById" parameterType="org.lanqiao.educationaladministrationsystem.pojo.EasCourse">
        update eas_course
        <set>

                start_date = #{startDate,jdbcType=DATE},

                end_date = #{endDate,jdbcType=DATE},

            <if test="classHour != null and classHour != '' ">
                class_hour = #{classHour,jdbcType=SMALLINT},
            </if>
            <if test="testMode != null and testMode != '' ">
                test_mode = #{testMode,jdbcType=VARCHAR},
            </if>
            <if test="studentNum != null and studentNum != '' ">
                student_num = #{studentNum,jdbcType=INTEGER},
            </if>
            <if test="choiceNum != null and choiceNum != ''">
                choice_num = #{choiceNum,jdbcType=INTEGER},
            </if>
            <if test="complete != null and complete != ''">
                complete = #{complete,jdbcType=INTEGER},
            </if>
            <if test="tId != null and tId != ''">
                t_id = #{tId,jdbcType=INTEGER},
            </if>
            <if test="baseCourseId != null and baseCourseId != ''">
                base_course_id = #{baseCourseId,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateDate">
        update eas_course
        <set>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=DATE},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=DATE}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="completeCourse" parameterType="org.lanqiao.educationaladministrationsystem.pojo.EasCourse">
        update eas_course
        <set>
            <if test="complete != null and complete != ''">
                complete = #{complete,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>




    <!--批量删除-->
    <delete id="batchDeleteCourse" parameterType="java.lang.reflect.Array">
        delete from eas_course where id in
        <foreach collection="dis" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>






    <select id="getList" resultMap="BaseResultMap">
        select
        B.id, start_date, end_date, class_hour, test_mode, student_num, choice_num, t_id, base_course_id
        , A.coursename as courseName, C.name as teacherName
        from eas_course as B, eas_base_course as A, eas_teacher as C
        <where>
            B.base_course_id = A.id and B.t_id = C.id
            <if test="easCourse.courseName != null and easCourse.courseName != ''">
                and A.coursename like concat('%',#{easCourse.courseName},'%')
            </if>
            <if test="easCourse.teacherName != null and easCourse.teacherName != ''">
                and C.name like CONCAT ('%',#{easCourse.teacherName},'%')
            </if>
        </where>
    </select>
    <select id="findCourseByBaseCourseIdAndTeacherId" resultType="org.lanqiao.educationaladministrationsystem.pojo.EasCourse">
        select * from eas_course
        <where>
            <if test="baseCourseId != null and baseCourseId != '' and tId != null and tId != ''">
                and base_course_id = #{baseCourseId} and t_id = #{tId}
            </if>

        </where>
    </select>
    <select id="getCourseById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from eas_course
        where id = #{id}
    </select>
    <select id="getCountBytId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) from eas_course where t_id = #{tId}
    </select>
    <select id="getCourseListBytId" resultMap="BaseResultMap">
        select
        B.id, start_date, end_date, class_hour, test_mode, student_num, choice_num, complete, t_id, base_course_id
        , A.coursename as courseName, C.name as teacherName
        from eas_course as B, eas_base_course as A, eas_teacher as C
        <where>
            B.base_course_id = A.id and B.t_id = C.id
            <if test="tId != null and tId != ''">
                and B.t_id = #{tId}
            </if>
        </where>
    </select>

<!--    <select id="getTotalItemsCountBySid" resultType="java.lang.Integer">-->
<!--        select count(*)-->
<!--        from eas_course as C, eas_teacher as T, eas_base_course as B-->
<!--        <where>-->
<!--            C.base_course_id = B.id and C.t_id = T.id and start_date > CURRENT_DATE-->
<!--            <if test="searchKey != null and searchKey != '' ">-->
<!--                and(-->
<!--                (B.coursename like CONCAT ('%',#{searchKey},'%') )-->
<!--                or (T.name like CONCAT ('%',#{searchKey},'%') )-->
<!--                )-->
<!--            </if>-->
<!--            and C.complete = 0-->
<!--            and C.id-->
<!--            <if test="isAll == 1 ">-->
<!--                not-->
<!--            </if>-->
<!--            in ( select c_id-->
<!--            from eas_score, eas_student as S-->
<!--            where S.id= #{sId} and S.id = eas_score.s_id )-->
<!--        </where>-->
<!--    </select>-->
    <select id="getTotalItemsCountBySid" resultType="java.lang.Integer">
        select count(*)
        from eas_course as C, eas_teacher as T, eas_base_course as B
        <where>
            C.base_course_id = B.id and C.t_id = T.id
            <if test="searchKey != null and searchKey != '' ">
                and(
                (B.coursename like CONCAT ('%',#{searchKey},'%') )
                or (T.name like CONCAT ('%',#{searchKey},'%') )
                )
            </if>
            and C.complete = 0
            and C.id
            <if test="isAll == 1 ">
                not
            </if>
            in ( select c_id
            from eas_score, eas_student as S
            where S.id= #{sId} and S.id = eas_score.s_id )
        </where>
    </select>
<!--    <select id="getCourseListBySid" resultMap="BaseResultMap">-->
<!--        select-->
<!--        C.id, start_date, end_date, class_hour, test_mode, student_num,-->
<!--        choice_num, B.coursename as courseName, T.name as teacherName-->

<!--        from eas_course as C, eas_teacher as T, eas_base_course as B-->
<!--        <where>-->
<!--            C.base_course_id = B.id and C.t_id = T.id and start_date > CURRENT_DATE-->
<!--            <if test="searchKey != null and searchKey != '' ">-->
<!--                and(-->
<!--                (B.coursename like CONCAT ('%',#{searchKey},'%') )-->
<!--                or (T.name like CONCAT ('%',#{searchKey},'%') )-->
<!--                )-->
<!--            </if>-->
<!--            and C.complete = 0-->
<!--            and C.id-->
<!--            <if test="isAll == 1 ">-->
<!--                not-->
<!--            </if>-->
<!--            in ( select c_id-->
<!--            from eas_score, eas_student as S-->
<!--            where S.id= #{sId} and S.id = eas_score.s_id )-->
<!--        </where>-->
<!--        <if test="pageUtil != null">-->
<!--            limit #{pageUtil.pageStart},#{pageUtil.count}-->
<!--        </if>-->
<!--    </select>-->
    <select id="getCourseListBySid" resultMap="BaseResultMap">
        select
        C.id, start_date, end_date, class_hour, test_mode, student_num,
        choice_num, B.coursename as courseName, T.name as teacherName

        from eas_course as C, eas_teacher as T, eas_base_course as B
        <where>
            C.base_course_id = B.id and C.t_id = T.id
            <if test="searchKey != null and searchKey != '' ">
                and(
                (B.coursename like CONCAT ('%',#{searchKey},'%') )
                or (T.name like CONCAT ('%',#{searchKey},'%') )
                )
            </if>
            and C.complete = 0
            and C.id
            <if test="isAll == 1 ">
                not
            </if>
            in ( select c_id
            from eas_score, eas_student as S
            where S.id= #{sId} and S.id = eas_score.s_id )
        </where>
        <if test="pageUtil != null">
            limit #{pageUtil.pageStart},#{pageUtil.count}
        </if>
    </select>
    <select id="findCompleteByCourseId" resultType="java.lang.Integer">
        select complete from eas_course where id = #{courseId}
    </select>
    <select id="getTotalPass" resultType="java.lang.Integer">
        select count(S.score)
        from eas_score as S,eas_course as C, eas_base_course as B
        <where>
            C.base_course_id = B.id
            <if test="baseCourseId != null and baseCourseId != '' ">
               and C.base_course_id = #{baseCourseId}
            </if>
            and C.complete = 1
            and S.c_id = C.id
            and S.score >= 60
        </where>

    </select>


    <select id="getTotalNoPass" resultType="java.lang.Integer">
        select count(S.score)
        from eas_score as S,eas_course as C, eas_base_course as B
        <where>
            C.base_course_id = B.id
            <if test="baseCourseId != null and baseCourseId != '' ">
               and C.base_course_id = #{baseCourseId}
            </if>
            and C.complete = 1
            and S.c_id = C.id
            and 60 > S.score
        </where>
    </select>










    <!--添加-->


<!-- SELECT *
        FROM eas_course s
                 LEFT JOIN eas_base_course c ON s.base_course_id = c.id
                 LEFT JOIN eas_teacher t ON s.t_id = t.id-->







    <!--分页查询计算总行数-->
    <select id="getCount" resultType="java.lang.Integer">
        SELECT COUNT(c.id)
        FROM eas_course s
                 LEFT JOIN eas_base_course c ON s.base_course_id = c.id
                 LEFT JOIN eas_teacher t ON s.t_id = t.id
    </select>

    <!--分页查询-->
    <select id="getPageList" resultType="org.lanqiao.educationaladministrationsystem.dto.EasCourse.EasCourseQuery" resultMap="BaseResultMap">
        select c.coursename,t.username,b.* from eas_course b left join eas_base_course c on b.base_course_id = c.id left join eas_teacher t on b.t_id = t.id
        limit #{offSet},#{pageSize}
    </select>


    <!--模糊查询分页总行数-->
    <select id="getFuzzyCount" resultType="java.lang.Integer">
        SELECT COUNT(c.id)
        FROM eas_course s
                 LEFT JOIN eas_base_course c ON s.base_course_id = c.id
                 LEFT JOIN eas_teacher t ON s.t_id = t.id
            <where>
                <if test="easeCourseFuzzyQuery.coursename != null and easeCourseFuzzyQuery.coursename != ''">
                    coursename like CONCAT ('%',#{easeCourseFuzzyQuery.coursename},'%')
                </if>
                <if test="easeCourseFuzzyQuery.username != '' and easeCourseFuzzyQuery.username != null">
                    and username like CONCAT ('%',${easeCourseFuzzyQuery.username},'%');
                </if>
            </where>
    </select>


    <!--模糊查询分页-->
    <select id="getFuzzyPageList" resultType="org.lanqiao.educationaladministrationsystem.dto.EasCourse.EasCourseQuery" resultMap="BaseResultMap">
        select c.coursename,t.username,b.* from eas_course b left join eas_base_course c on b.base_course_id = c.id left join eas_teacher t on b.t_id = t.id
        <where>
            <if test="easeCourseFuzzyQuery.coursename != null and easeCourseFuzzyQuery.coursename != ''">
                coursename like CONCAT ('%',#{easeCourseFuzzyQuery.coursename},'%')
            </if>
            <if test="easeCourseFuzzyQuery.username != '' and easeCourseFuzzyQuery.username != null">
                and username like CONCAT ('%',${easeCourseFuzzyQuery.username},'%');
            </if>
        </where>
    limit #{offSet},#{easeCourseFuzzyQuery.pageSize}
    </select>


    <!--添加 -->
    <insert id="addCourse" parameterType="org.lanqiao.educationaladministrationsystem.pojo.EasCourse">
        insert into eas_course (start_date, end_date, class_hour, test_mode, student_num, choice_num, complete, t_id, base_course_id)
        values (#{startDate}, #{endDate}, #{classHour}, #{testMode}, #{studentNum}, 0, 0, #{tId}, #{baseCourseId})
    </insert>



</mapper>